{
  "info": {
    "_postman_id": "your-collection-id",
    "name": "Parking System API",
    "description": "Collection for the Parking System API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Validar el código de respuesta",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Validar la estructura de la respuesta",
                  "pm.test('Response has access_token', function () {",
                  "    const jsonResponse = pm.response.json();",
                  "    pm.expect(jsonResponse).to.have.property('access_token');",
                  "    pm.expect(jsonResponse).to.have.property('user');",
                  "});",
                  "",
                  "// Guardar el token y variables",
                  "if (pm.response.code === 200) {",
                  "    const jsonResponse = pm.response.json();",
                  "    if (jsonResponse.access_token) {",
                  "        pm.environment.set('authToken', jsonResponse.access_token);",
                  "        pm.collectionVariables.set('token', jsonResponse.access_token);",
                  "        console.log('Token JWT guardado exitosamente');",
                  "",
                  "        // Guardar información del usuario",
                  "        if (jsonResponse.user) {",
                  "            pm.environment.set('userId', jsonResponse.user.id);",
                  "            pm.environment.set('userRole', jsonResponse.user.role);",
                  "        }",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"strongPassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and get JWT token"
          }
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"newuser@example.com\",\n    \"password\": \"strongPassword123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{refreshToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"newuser@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"role\": \"client\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Updated Name\",\n    \"lastName\": \"Updated Last Name\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Parking",
      "item": [
        {
          "name": "Get Available Parking Spots",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/parking/spots/available",
              "host": ["{{baseUrl}}"],
              "path": ["parking", "spots", "available"],
              "query": [
                {
                  "key": "date",
                  "value": "{{date}}",
                  "description": "Optional date parameter (YYYY-MM-DD)"
                }
              ]
            },
            "description": "Get list of available parking spots"
          }
        },
        {
          "name": "Create Parking Spot",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"number\": \"A-123\",\n    \"type\": \"standard\",\n    \"status\": \"available\",\n    \"floor\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/parking/spots",
              "host": ["{{baseUrl}}"],
              "path": ["parking", "spots"]
            },
            "description": "Create a new parking spot"
          }
        }
      ]
    },
    {
      "name": "Reservations",
      "item": [
        {
          "name": "Create Reservation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": \"user-id-here\",\n    \"parkingSpotId\": \"spot-id-here\",\n    \"startTime\": \"2024-01-20T10:00:00Z\",\n    \"endTime\": \"2024-01-20T12:00:00Z\",\n    \"vehicleType\": \"car\",\n    \"vehiclePlate\": \"ABC123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reservations",
              "host": ["{{baseUrl}}"],
              "path": ["reservations"]
            }
          }
        },
        {
          "name": "Update Reservation Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reservations/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["reservations", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "reservation-id-here"
                }
              ]
            }
          }
        },
        {
          "name": "Get All Reservations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reservations?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["reservations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Reservation by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reservations/:id",
              "host": ["{{baseUrl}}"],
              "path": ["reservations", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "reservation-id-here"
                }
              ]
            }
          }
        },
        {
          "name": "Delete Reservation",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reservations/:id",
              "host": ["{{baseUrl}}"],
              "path": ["reservations", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "reservation-id-here"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Add current date in YYYY-MM-DD format",
          "const today = new Date().toISOString().split('T')[0];",
          "pm.environment.set('date', today);"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  }
} 